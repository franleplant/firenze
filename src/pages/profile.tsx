import type { NextPage } from "next";
import Head from "next/head";
import invariant from "ts-invariant";
import { useEagerConnect, useWeb3React } from "client/modules/wallet";
import Account from "components/Account";
import Chain from "components/Chain";

import styles from "../styles/Home.module.css";
import { useNfts, INFT } from "client/io/nfts";
import Avatar from "components/Avatar";
import AvatarSelector from "components/AvatarSelector";
import { useProfile, useSaveProfile } from "client/io/profile";
import useLibrary from "client/modules/wallet/useLibrary";

import { sign } from "modules/signedPayload";

const Profile: NextPage = () => {
  useEagerConnect();
  // TODO handle error
  const { account, active, chainId } = useWeb3React();
  const library = useLibrary();
  const { data: nfts } = useNfts(account);

  console.log(nfts);
  const saveProfile = useSaveProfile();
  const { data: profile } = useProfile(account, chainId);

  // TODO abstract
  const avatarUrl = JSON.parse(profile?.nft?.metadata || "{}")?.image;

  if (!active || !account) {
    return <div>Please login</div>;
  }

  async function onSave(nft: INFT | undefined) {
    invariant(!!active && !!account && !!chainId, "user must be logged in");
    invariant(!!library, "a provider must be available");

    const payload = {
      chainId,
      // TODO if undefined it should remove the entries in the db
      nftAddress: nft?.token_address,
      nftId: nft?.token_id,
    };

    const signedPayload = await sign(library, account, payload);

    try {
      // TODO handle error and loading states
      await saveProfile.mutateAsync(signedPayload);
    } catch (err) {
      console.error(err);
      throw err;
    }
  }

  return (
    <div className="">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div>
          Hello <Account /> on <Chain />
          <Avatar url={avatarUrl} />
        </div>

        <h1 className={styles.title}>Profile</h1>

        <AvatarSelector onSave={onSave} value={profile?.nft} />
      </main>
    </div>
  );
};

export default Profile;
