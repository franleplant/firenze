datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model AuthorProfile {
  author      String    @db.VarChar(255) @id
  description String?   @db.VarChar(255)
  chainId     Int
  nftAddress  String?   @db.VarChar(255)
  nftId       String?   @db.VarChar(255)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model AuthorPost {
  author    String @db.VarChar(255)
  post      String @db.VarChar(255) @id
  timestamp DateTime @default(now())
  isDeleted Boolean  @default(false)

  @@index([author], map: "idx_authorpost_author")
}

model AuthorPostHead {
  author String @db.VarChar(255) @id
  post String @db.VarChar(255)
}

model Follow {
  id        Int @id @default(autoincrement())
  fromUser  String @db.VarChar(255)
  toUser    String @db.VarChar(255)
  timestamp DateTime @default(now())

  @@index([fromUser], map: "idx_follow_fromUser")
  @@index([toUser], map: "idx_follow_toUser")
}

model PostLike {
  id    Int @id @default(autoincrement())
  post  String @db.VarChar(255)
  liker String @db.VarChar(255)
  timestamp DateTime @default(now())

  @@index([post], map: "idx_postlike_post")
}

model PostResponse {
  fromPost String @db.VarChar(255) @id
  toPost String @db.VarChar(255)

  @@index([toPost], map: "idx_postresponse_topost")
}